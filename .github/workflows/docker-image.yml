name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    # Secuencia de pasos que se realizarán sobre el ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Con el id podemos hacer referencia al producto de este paso en concreto del .yml
    - name: Git Semantic Version
      uses: PaulHatch/semantic-version@v4.0.3
      with:
        major_pattern: "major:"
        minor_pattern: "feature:"
        format: "${major}.${minor}.${patch}-prerelease${increment}"
      id: version

    - name: Docker login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      # Este es el comando que vamos a ejecutar, si ponemos un pipe indica que las siguientes líneas que vengan a continuación serán líneas independientes.
      # Lo primero que hacemos es loguearnos en docker hub desde línea de comandos para poder subir las imágenes y desplegarlas en docker hub y tener permiso.
      run: |
        echo "Iniciando login"
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
        echo "Fin del login"
        echo "New version: $NEW_VERSION!!!"

    - name: Build Docker image
      env:
        # Variable de entorno que hace referencia al paso anterior. Cama "name:" es un "step"
        NEW_VERSION: ${{ steps.version.outputs.version }}
      run: |
        docker build -t iiglesias91/docker-graphql:$NEW_VERSION .
        docker build -t iiglesias91/docker-graphql:latest .

    - name: Push Docker image
      env:
        NEW_VERSION: ${{ steps.version.outputs.version }}
      run: |
        docker push iiglesias91/docker-graphql:$NEW_VERSION
        docker push iiglesias91/docker-graphql:latest

    # - name: Build the Docker image
    #   run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
